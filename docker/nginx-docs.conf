# Nginx configuration for serving Claudy documentation
server {
    listen 80;
    server_name localhost;
    
    # Document root
    root /usr/share/nginx/html;
    index index.html index.htm README.md;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # GZIP compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        text/markdown;
    
    # Main location for documentation
    location / {
        try_files $uri $uri/ @markdown;
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Markdown file handling
    location @markdown {
        # Try to serve markdown files with .md extension
        try_files $uri.md $uri/README.md /README.md =404;
        
        # Set content type for markdown files
        location ~ \.md$ {
            add_header Content-Type "text/plain; charset=utf-8";
        }
    }
    
    # API documentation (if swagger/openapi files exist)
    location /api/ {
        try_files $uri $uri/ /api/index.html;
    }
    
    # Architecture diagrams and images
    location /images/ {
        expires 1w;
        add_header Cache-Control "public";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging
    access_log /var/log/nginx/docs_access.log;
    error_log /var/log/nginx/docs_error.log;
}